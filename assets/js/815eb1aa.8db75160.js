(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9e3],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?o.createElement(f,a(a({ref:t},c),{},{components:n})):o.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6814:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var o=n(2122),r=n(9756),i=(n(7294),n(3905)),a=["components"],l={sidebar_position:2},s={unversionedId:"soundvoltex - copia/guide-intro",id:"soundvoltex - copia/guide-intro",isDocsHomePage:!1,title:"Introduction to this guide",description:"This guide includes step by step instructions to build a Sound Voltex Controller for PC. The final product it's a mini portable SDVX controller with the same button layoyt and encoders.",source:"@site/docs/soundvoltex - copia/02-guide-intro.md",sourceDirName:"soundvoltex - copia",slug:"/soundvoltex - copia/guide-intro",permalink:"/test/docs/soundvoltex - copia/guide-intro",editUrl:"https://github.com/consandstuff/docs/soundvoltex - copia/02-guide-intro.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction to the Game",permalink:"/test/docs/soundvoltex - copia/game-intro"},next:{title:"Firmware / Code",permalink:"/test/docs/soundvoltex - copia/code"}},u=[{value:"Details",id:"details",children:[]},{value:"Variations",id:"variations",children:[]}],c={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This guide includes step by step instructions to build a Sound Voltex Controller for PC. The final product it's a mini portable SDVX controller with the same button layoyt and encoders."),(0,i.kt)("p",null,"The main board will be a Leonardo Arduino PCB."),(0,i.kt)("p",null,"The source of the information was collected by me, and I also used info from some other sources, like the code and measurements."),(0,i.kt)("p",null,"The Arduino Leonardo code is a modification of another tutorial you can see here: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/4yn/iivx"},"github user 4yn")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"http://i.imgur.com/B35qYOW.jpg",alt:"Controller"})),(0,i.kt)("p",null,"Concept art. Banana for scale."),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("p",null,"In this guide I'll explain most of the stuff you need to know to make a affordable Sound Voltex mini controller (minicon from now on). The controller will feature the same 7 buttons and 2 knobs as the arcade, but in a smaller package. The final size of this controller is 20x20x7cm."),(0,i.kt)("p",null,"This instructions for a minicon would also work to make a normal size controller, because they're basically the same thing, except the buttons are different and the acrylic is smaller in the minicon. If you're looking for a normal size SDVX controller ",(0,i.kt)("a",{parentName:"p",href:"http://consandstuff.github.io/rhythmcons/sound-voltex/sdvx-normal/"},"check this other guide")),(0,i.kt)("p",null,"Now on to the controller."),(0,i.kt)("p",null,"The minicon is made mainly from 3 main parts:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The top part: this includes the acrylic design, the buttons and the holes layout."),(0,i.kt)("li",{parentName:"ol"},"The box part: this includes the wood box where everything will be mounted"),(0,i.kt)("li",{parentName:"ol"},"The electric part: this includes all the electronics you need to do to finish this minicon")),(0,i.kt)("h2",{id:"variations"},"Variations"),(0,i.kt)("p",null,"The code and CAD files included will let you make a SOUND VOLTEX minicon using a Arduino Leonardo PCB with this configuration: "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"SDVX Controller (7 buttons + 2 Knobs + 7 LEDs)\n",(0,i.kt)("img",{parentName:"li",src:"http://imgur.com/ThOg59V.jpg",alt:"Controller"}))))}d.isMDXComponent=!0}}]);