(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1013],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return c},kt:function(){return m}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=o.createContext({}),d=function(e){var t=o.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=d(e.components);return o.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(r),m=n,h=p["".concat(u,".").concat(m)]||p[m]||s[m]||a;return r?o.createElement(h,i(i({ref:t},c),{},{components:r})):o.createElement(h,i({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var d=2;d<a;d++)i[d]=r[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7485:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d},default:function(){return s}});var o=r(2122),n=r(9756),a=(r(7294),r(3905)),i=["components"],l={sidebar_position:3},u={unversionedId:"beatmania/code",id:"beatmania/code",isDocsHomePage:!1,title:"Firmware / Code",description:"Firmware / Code and CAD files",source:"@site/docs/beatmania/03-code.md",sourceDirName:"beatmania",slug:"/beatmania/code",permalink:"/test/docs/beatmania/code",editUrl:"https://github.com/consandstuff/docs/beatmania/03-code.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Introduction to this guide",permalink:"/test/docs/beatmania/guide-intro"},next:{title:"Parts List",permalink:"/test/docs/beatmania/parts"}},d=[{value:"Firmware / Code and CAD files",id:"firmware--code-and-cad-files",children:[]},{value:"Prepare your board",id:"prepare-your-board",children:[]},{value:"Uploading the firmware",id:"uploading-the-firmware",children:[{value:"How to upload the code on a Leonardo Board.",id:"how-to-upload-the-code-on-a-leonardo-board",children:[]}]}],c={toc:d};function s(e){var t=e.components,r=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"firmware--code-and-cad-files"},"Firmware / Code and CAD files"),(0,a.kt)("p",null,"All the files are in my github repository, included:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Code (easy to upload)"),(0,a.kt)("li",{parentName:"ul"},"CAD files (for the acrylic / plexiglass)")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/lizardbeans/diy-iidx"},"https://github.com/lizardbeans/diy-iidx")),(0,a.kt)("h2",{id:"prepare-your-board"},"Prepare your board"),(0,a.kt)("p",null,"First you have to get used to working with Arduino IDE for Leonardo boards."),(0,a.kt)("p",null,"I suggest you buy the board first, upload the firmware and test the different pins using a jumperwire to understand how it works."),(0,a.kt)("p",null,'Basically every pin in each board has a button and for the button to send a "on" state it has to be connected to a grounded pin (GND). '),(0,a.kt)("p",null,"So you can test the buttons by uploading the firmare, connecting it to a usb port and going to ",(0,a.kt)("a",{parentName:"p",href:"https://gamepad-tester.com/"},"https://gamepad-tester.com/")," to test each pin. "),(0,a.kt)("p",null,"If you can't get past this then you'll have a hard time making the whole controller work."),(0,a.kt)("h2",{id:"uploading-the-firmware"},"Uploading the firmware"),(0,a.kt)("h3",{id:"how-to-upload-the-code-on-a-leonardo-board"},"How to upload the code on a Leonardo Board."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Download Arduino IDE "),(0,a.kt)("li",{parentName:"ul"},"Connect your Leonardo Board to a case USB port (not a usb HUB) with a working USB cable. Most upload error ocurr when using a faulty USB cable or worng USB port."),(0,a.kt)("li",{parentName:"ul"},"Go to Tools and pick the Leonardo Board"),(0,a.kt)("li",{parentName:"ul"},"Also pick the correct COM port"),(0,a.kt)("li",{parentName:"ul"},"Copy or install the needed libraries."),(0,a.kt)("li",{parentName:"ul"},"Open the .ino file, press the check mark to validate the code, and if there're no error then hit upload.")),(0,a.kt)("p",null,"For Leonardo users there's another more refined code you can also try.\nThis code has been made by ",(0,a.kt)("strong",{parentName:"p"},"KnucklesLee")," and you can get it form his Github repositories."),(0,a.kt)("p",null,"Updated code for all rhythm games here made by KnucklesLee\nGithub: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/knuckleslee/RhythmCodes"},"https://github.com/knuckleslee/RhythmCodes")),(0,a.kt)("p",null,"Libraries to install: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/MHeironimus/ArduinoJoystickLibrary/"},"https://github.com/MHeironimus/ArduinoJoystickLibrary/")))}s.isMDXComponent=!0}}]);