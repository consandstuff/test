(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5941],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=o,f=p["".concat(u,".").concat(m)]||p[m]||l[m]||i;return r?n.createElement(f,a(a({ref:t},d),{},{components:r})):n.createElement(f,a({ref:t},d))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=p;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},6148:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return l}});var n=r(2122),o=r(9756),i=(r(7294),r(3905)),a=["components"],s={sidebar_position:3},u={unversionedId:"soundvoltex - copia/code",id:"soundvoltex - copia/code",isDocsHomePage:!1,title:"Firmware / Code",description:"Firmware / Code and CAD files",source:"@site/docs/soundvoltex - copia/03-code.md",sourceDirName:"soundvoltex - copia",slug:"/soundvoltex - copia/code",permalink:"/test/docs/soundvoltex - copia/code",editUrl:"https://github.com/consandstuff/docs/soundvoltex - copia/03-code.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Introduction to this guide",permalink:"/test/docs/soundvoltex - copia/guide-intro"},next:{title:"Parts List",permalink:"/test/docs/soundvoltex - copia/parts"}},c=[{value:"Firmware / Code and CAD files",id:"firmware--code-and-cad-files",children:[]},{value:"Prepare your board",id:"prepare-your-board",children:[]},{value:"Uploading the firmware",id:"uploading-the-firmware",children:[{value:"Arudino Leonardo Firmware (by KnucklesLee from the Discord Server)",id:"arudino-leonardo-firmware-by-knuckleslee-from-the-discord-server",children:[]}]}],d={toc:c};function l(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"firmware--code-and-cad-files"},"Firmware / Code and CAD files"),(0,i.kt)("p",null,"Included in the Github page there's a CAD file that includes everything you need to make the box of the controller."),(0,i.kt)("p",null,"Tested only with the hardware included in this tutorial."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/lizardbeans/sdvxminicon"},"https://github.com/lizardbeans/sdvxminicon")," "),(0,i.kt)("h2",{id:"prepare-your-board"},"Prepare your board"),(0,i.kt)("p",null,"First you have to get used to working with Arduino IDE for both Teensy and Leonardo boards."),(0,i.kt)("p",null,"I suggest you buy the board first, upload the firmware and test the different pins using a jumperwire to understand how it works."),(0,i.kt)("p",null,'Basically every pin in each board has a button and for the button to send a "on" state it has to be connected to a grounded pin (GND). '),(0,i.kt)("p",null,"So you can test the buttons by uploading the firmare, connecting it to a usb port and going to ",(0,i.kt)("a",{parentName:"p",href:"https://gamepad-tester.com/"},"https://gamepad-tester.com/")," to test each pin. "),(0,i.kt)("h2",{id:"uploading-the-firmware"},"Uploading the firmware"),(0,i.kt)("h3",{id:"arudino-leonardo-firmware-by-knuckleslee-from-the-discord-server"},"Arudino Leonardo Firmware (by KnucklesLee from the Discord Server)"),(0,i.kt)("p",null,"For Leonardo users there's another more reifned code you can also try.\nThis code has been made by ",(0,i.kt)("strong",{parentName:"p"},"KnucklesLee")," and you can get it form his Github repositories."),(0,i.kt)("p",null,"Updated code for all rhythm games here made by KnucklesLee\nGithub: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/knuckleslee/RhythmCodes"},"https://github.com/knuckleslee/RhythmCodes")),(0,i.kt)("p",null,"Libraries to install: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/MHeironimus/ArduinoJoystickLibrary/"},"https://github.com/MHeironimus/ArduinoJoystickLibrary/")))}l.isMDXComponent=!0}}]);